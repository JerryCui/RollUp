1. 继承基础
	关键字：extends，不能支持多超类继承，与C++不同，可以支持多层次的类继承。

2. 成员访问和继承
	子类不能访问超类中的被声明为private的成员，private定义为此类私有，不能被该类外的所有代码访问，包括子类。
	子类只是超类成员和变量上的继承，使用和实例化时上还是两个单独的类。
	超类的引用变量可以引用子类的对象。
	1) super
		super()调用超类的构造函数。
		super.member 调用超类的成员。
		引用的是最接近的超类的方法和成员。
	2） 多级类层次
		构造函数的是以派生的顺序被调用的。
		如果子类中重载了超类中的方法（具有相同的方法名称和类型声明），超类中的方法将被隐藏而不被调用，如果还继续希望引用超类中被重载的方法话，必须使用super。
	3） 抽象
		abstract：定义在超类中，子类必须要重载这些方法，子类不能直接使用这些abstract关键字的超类方法，因为一般不会有具体的方法体。
		任何包含一个或多个抽象方法的类都必须要声明为抽象类，而抽象类是没有对象的，不能被实例化，只能被用来做超类派生子类，但是抽象类可以创建对象引用不能被new，。
		final：
			声明成final的方法不能被重载。java运行时态的调用方法叫做后期绑定，是同过类与类之间的关系找到符合条件的调用方法的；带final关键字的方法调用可以在编译时刻解决，将调用方法写进字节码，直接调用，提高调用效率减少查找类与类之间关系的开销，叫做早期绑定。
			声明称final的类不能被继承。
	4) Object 类
		Object是其他所有类的超类，可以引用任何一个类的对象，可以引用任何数组。
				
		
	
	
			
