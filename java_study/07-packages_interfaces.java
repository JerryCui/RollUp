1. 包
	包是类的容器，以分层的方式保存并被明确的引入新的类定义。
	包既是命名机制也是可见度机制，类似于C中的include机制，定义在包内的类不能被包以外的代码访问。
	定义：package，写在java源文件的第一句，该语句定义了一个存储类的名字空间。java使用文件系统目录来存储包，目录名必须和包名严格匹配。多个文件可以包含相同的package声明，package声明仅仅在指定了文件中定义的文件属于哪一个包。可以建立多级分层次的包。不能在没有对保存类的目录重命名的情况下重命名一个包。
	类路径（CLASSPATH）：
		在执行非当前目录中的类时，需要在类名的前面增加目录名字和.
	访问保护：
		包是盛装类和下级包的容器。类是数据和代码的容器。
		任何声明为public的类都可以被任何地方访问。
		声明为private的成员不能被该类外的看到。
		如果未指明public和private，它对于子类和该包中其他类是可见的
		声明为protected是可以被不同包中的子类访问的，但不能被非子类访问。
	引入包：
		import

2. 接口
	interface，指定一个类必须去做什么，而不必规定它如何去做。
	接口中定义的方法是没有方法体的。每个包含接口的类必须实现此接口中的所有方法。
	接口中可以声明变量，但都是final和static的。
	接口中方法在类中实现时必须被声明为public，而且类型需要与接口中的定义类型保持一致。
	可以允许局部实现，为类增加abstract关键字，定义为抽象类。此类的任何子类都必须实现接口中的方法，除非子类也是个abstract类。
	【如果类中的方法与接口中的方法重命名，如何理解？？】
	【接口中变量有什么意义，如何使用??】
	接口允许继承，被继承时访问接口的类必须实现所有接口中的方法。
		
